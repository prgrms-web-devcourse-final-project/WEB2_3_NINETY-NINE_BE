plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    implementation 'org.seleniumhq.selenium:selenium-java:4.16.1'

    // Jsoup 라이브러리 추가
    implementation 'org.jsoup:jsoup:1.15.3'

    // WebDriverManager (ChromeDriver 자동 관리)
    implementation 'io.github.bonigarcia:webdrivermanager:5.3.0'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.0' // 최신 버전 사용

}

tasks.named('test') {
    useJUnitPlatform()
}
